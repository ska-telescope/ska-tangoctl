image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: "false"

stages:
  - lint
  - build
  - test
  - deploy
  - integration
  - staging
  - join-reports
  - pages
  - publish
  - scan

include:
# Linting stage
  - local: gitlab-ci/includes/python-lint.gitlab-ci.yml

# Build stage
  - local: gitlab-ci/includes/python-build.gitlab-ci.yml

# Test stage
  - local: gitlab-ci/includes/python-test.gitlab-ci.yml

# Scan stage
  - local: gitlab-ci/includes/python-scan.gitlab-ci.yml

# Publish stage
  - local: gitlab-ci/includes/python-publish.gitlab-ci.yml

# Pages stage
  - local: gitlab-ci/includes/docs-pages.gitlab-ci.yml

# Publish stage
  - local: gitlab-ci/includes/changelog.gitlab-ci.yml

# Check dependencies
  - local: .gitlab/ci/check-dependencies/.pipeline.yaml

# Add Workflow rules
  - local: gitlab-ci/includes/rules.gitlab-ci.yml

# OCI Images
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

# Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

# Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml'

# Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs-pages.gitlab-ci.yml'

# .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

# changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

# release template
  - project: 'ska-telescope/templates-repository'
    file : 'gitlab-ci/includes/release.gitlab-ci.yml'

notebook-lint:
  allow_failure: true

notebook-test:
  when: manual

# These jobs are modified in order to avoid installing build with pip -- for some reason this fails with:
# No module named build.__main__; 'build' is a package and cannot be directly executed
python-build-for-development:
  before_script:
    - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile; exit 1")'
    - 'make help | grep python-build'

python-build-for-publication:
  before_script:
    - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile; exit 1")'
    - 'make help | grep python-build'

# umbrella include for all Docs related life cycle stages

create-ci-metrics:
  stage: .post
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  cache: {}
  when: always
  tags:
    - k8srunner
  script:
    # Gitlab CI badges creation: START
    - apt-get -y update
    - apt-get install -y curl --no-install-recommends
    - "curl --retry 30 --retry-delay 3 --header \"PRIVATE-TOKEN: $CI_JOB_TOKEN\" -s https://gitlab.com/ska-telescope/ska-cicd-ci-metrics-utilities/raw/master/ska_ci_metrics_utilities/ci-badges-func.sh | sh"
      # Gitlab CI badges creation: END
  artifacts:
    paths:
      - ./build
  allow_failure: true
